<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Labwork1UI.BasicPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Labwork1UI"
    xmlns:common="using:Labwork1UI.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Encoding/Decoding Text</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        
        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <TextBlock Text="Shannon-Fano Method" HorizontalAlignment="Left"
                       Margin="10"
                       Style="{StaticResource PageSubheaderTextStyle}"/>
            <TextBlock Text="Huffman Method" Grid.Column="1" HorizontalAlignment="Left"
                       Margin="10"
                       Style="{StaticResource PageSubheaderTextStyle}"/>
            
            <!-- Shannon-Fano method UI -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="mapping ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />
                    <Button Grid.Column="1" Content="Map" MinWidth="150" Margin="10, 0, 10, 0"/>
                </Grid>
                
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="encoding ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />
                    <Button Grid.Column="1" Content="Read" MinWidth="150" Margin="10, 0, 10, 0"/>
                </Grid>
                
                <Grid Grid.Row="2">
                    <ListBox Margin="10">
                        
                    </ListBox>
                </Grid>

                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
<Button Grid.Column="0" Content="Encode" MinWidth="150"  Margin="10, 0, 10, 0"
                            HorizontalAlignment="Left"/>
                    <Button Grid.Column="0" Content="Generate" MinWidth="150"  Margin="10, 0, 10, 0"
                            HorizontalAlignment="Right"/>
                    <Button Grid.Column="1" Content="Decode" MinWidth="150"  Margin="10, 0, 10, 0"
                            HorizontalAlignment="Right"/>
                    
                    <TextBox Grid.Column="0" Grid.Row="1" Text="to encode ..." 
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />
                    <TextBox Grid.Column="1" Grid.Row="1" Text="to decode ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />

                </Grid>
                
            </Grid>
            
            <!-- Huffman method UI -->
            <Grid Grid.Row="1" Grid.Column="1">
<Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="mapping ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />
                    <Button Grid.Column="1" Content="Map" MinWidth="150"  Margin="10, 0, 10, 0"/>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="encoding ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />
                    <Button Grid.Column="1" Content="Read" MinWidth="150"  Margin="10, 0, 10, 0"/>
                </Grid>

                <Grid Grid.Row="2">
                    <ListBox Margin="10">

                    </ListBox>
                </Grid>

                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Column="0" Content="Encode" MinWidth="150" Margin="10, 0, 10, 0"
                            HorizontalAlignment="Left"/>
                    <Button Grid.Column="0" Content="Generate" MinWidth="150" Margin="10, 0, 10, 0"
                            HorizontalAlignment="Right"/>
                    <Button Grid.Column="1" Content="Decode" MinWidth="150" Margin="10, 0, 10, 0"
                            HorizontalAlignment="Right"/>

                    <TextBox Grid.Column="0" Grid.Row="1" Text="to encode ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />
                    <TextBox Grid.Column="1" Grid.Row="1" Text="to decode ..."  
                             Margin="10" AcceptsReturn="True" TextWrapping="Wrap" />

                </Grid>

            
            </Grid>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
